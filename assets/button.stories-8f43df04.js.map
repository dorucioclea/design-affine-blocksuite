{"version":3,"file":"button.stories-8f43df04.js","sources":["../../src/button/button.tsx"],"sourcesContent":["import clsx from 'clsx'\nimport {\n  type FC,\n  forwardRef,\n  type HTMLAttributes,\n  type PropsWithChildren,\n  type ReactElement,\n  useMemo\n} from 'react'\n\nimport { Loading } from '../loading'\nimport { button, buttonIcon } from './style.css'\n\nexport type ButtonType =\n  | 'default'\n  | 'primary'\n  | 'plain'\n  | 'error'\n  | 'warning'\n  | 'success'\n  | 'processing';\nexport type ButtonSize = 'default' | 'large' | 'extraLarge';\ntype BaseButtonProps = {\n  type?: ButtonType;\n  disabled?: boolean;\n  icon?: ReactElement;\n  iconPosition?: 'start' | 'end';\n  shape?: 'default' | 'round' | 'circle';\n  block?: boolean;\n  size?: ButtonSize;\n  loading?: boolean;\n  withoutHoverStyle?: boolean;\n}\n\nexport type ButtonProps = PropsWithChildren<BaseButtonProps> &\n  Omit<HTMLAttributes<HTMLButtonElement>, 'type'> & {\n  componentProps?: {\n    startIcon?: Omit<IconButtonProps, 'icon'>;\n    endIcon?: Omit<IconButtonProps, 'icon'>;\n  }\n}\n\nexport type IconButtonProps = PropsWithChildren<BaseButtonProps> &\n  Omit<HTMLAttributes<HTMLDivElement>, 'type'>\n\nconst defaultProps = {\n  type: 'default',\n  disabled: false,\n  shape: 'default',\n  size: 'default',\n  iconPosition: 'start',\n  loading: false,\n  withoutHoverStyle: false\n}\n\nconst ButtonIcon: FC<IconButtonProps> = props => {\n  const {\n    size,\n    icon,\n    iconPosition = 'start',\n    children,\n    type,\n    loading,\n    ...otherProps\n  } = {\n    ...defaultProps,\n    ...props\n  }\n  const onlyIcon = icon && !children\n  return (\n    <div\n      {...otherProps}\n      className={clsx(buttonIcon, {\n        'color-white': type !== 'default' && type !== 'plain',\n        large: size === 'large',\n        extraLarge: size === 'extraLarge',\n        end: iconPosition === 'end' && !onlyIcon,\n        start: iconPosition === 'start' && !onlyIcon,\n        loading\n      })}\n    >\n      {icon}\n    </div>\n  )\n}\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    const {\n      children,\n      type,\n      disabled,\n      shape,\n      size,\n      icon: propsIcon,\n      iconPosition,\n      block,\n      loading,\n      withoutHoverStyle,\n      className,\n      ...otherProps\n    } = {\n      ...defaultProps,\n      ...props\n    }\n\n    const icon = useMemo(() => {\n      if (loading) {\n        return <Loading/>\n      }\n      return propsIcon\n    }, [propsIcon, loading])\n\n    return (\n      <button\n        {...otherProps}\n        ref={ref}\n        className={clsx(\n          button,\n          {\n            primary: type === 'primary',\n            plain: type === 'plain',\n            error: type === 'error',\n            warning: type === 'warning',\n            success: type === 'success',\n            processing: type === 'processing',\n            large: size === 'large',\n            extraLarge: size === 'extraLarge',\n            disabled,\n            circle: shape === 'circle',\n            round: shape === 'round',\n            block,\n            loading,\n            'without-hover': withoutHoverStyle\n          },\n          className\n        )}\n        disabled={disabled}\n        data-disabled={disabled}\n      >\n        {icon && iconPosition === 'start' ? (\n          <ButtonIcon {...props.componentProps?.startIcon} icon={icon}/>\n        ) : null}\n        <span>{children}</span>\n        {icon && iconPosition === 'end' ? (\n          <ButtonIcon {...props.componentProps?.endIcon} icon={icon}/>\n        ) : null}\n      </button>\n    )\n  }\n)\nButton.displayName = 'Button'\nexport default Button\n"],"names":["defaultProps","ButtonIcon","props","size","icon","iconPosition","children","type","loading","otherProps","onlyIcon","jsx","clsx","buttonIcon","Button","forwardRef","ref","disabled","shape","propsIcon","block","withoutHoverStyle","className","useMemo","Loading","jsxs","button","_a","_b"],"mappings":"4RA6CA,MAAAA,EAAA,CAAqB,KAAA,UACb,SAAA,GACI,MAAA,UACH,KAAA,UACD,aAAA,QACQ,QAAA,GACL,kBAAA,EAEX,EAEAC,EAAAC,GAAA,CACE,KAAA,CAAM,KAAAC,EACJ,KAAAC,EACA,aAAAC,EAAA,QACe,SAAAC,EACf,KAAAC,EACA,QAAAC,EACA,GAAAC,CACG,EAAA,CACD,GAAAT,EACC,GAAAE,CACA,EAELQ,EAAAN,GAAA,CAAAE,EACA,OAAAK,EAAA,IACE,MAAC,CAAA,GAAAF,EACK,UAAAG,EAAAC,EAAA,CACwB,cAAAN,IAAA,WAAAA,IAAA,QACoB,MAAAJ,IAAA,QAC9B,WAAAA,IAAA,aACK,IAAAE,IAAA,OAAA,CAAAK,EACW,MAAAL,IAAA,SAAA,CAAAK,EACI,QAAAF,CACpC,CAAA,EACD,SAAAJ,CAEA,CAAA,CAGP,EACOU,EAAAC,EAAA,WAAe,CAAAb,EAAAc,IAAA,SAElB,KAAA,CAAM,SAAAV,EACJ,KAAAC,EACA,SAAAU,EACA,MAAAC,EACA,KAAAf,EACA,KAAAgB,EACM,aAAAd,EACN,MAAAe,EACA,QAAAZ,EACA,kBAAAa,EACA,UAAAC,EACA,GAAAb,CACG,EAAA,CACD,GAAAT,EACC,GAAAE,CACA,EAGLE,EAAAmB,EAAAA,QAAA,IACEf,EACEG,EAAA,IAAAa,EAAA,CAAA,CAAA,EAEFL,EAAO,CAAAA,EAAAX,CAAA,CAAA,EAGT,OAAAiB,EAAA,KACE,SAAC,CAAA,GAAAhB,EACK,IAAAO,EACJ,UAAAJ,EACWc,EACT,CACA,QAAAnB,IAAA,UACoB,MAAAA,IAAA,QACF,MAAAA,IAAA,QACA,QAAAA,IAAA,UACE,QAAAA,IAAA,UACA,WAAAA,IAAA,aACG,MAAAJ,IAAA,QACL,WAAAA,IAAA,aACK,SAAAc,EACrB,OAAAC,IAAA,SACkB,MAAAA,IAAA,QACD,MAAAE,EACjB,QAAAZ,EACA,gBAAAa,CACiB,EACnBC,CACA,EACF,SAAAL,EACA,gBAAAA,EACe,SAAA,CAEdb,GAAAC,IAAA,QAAAM,EAAAA,IAAAV,EAAA,CAAA,IAAA0B,EAAAzB,EAAA,iBAAA,YAAAyB,EAAA,UAAA,KAAAvB,CAAA,CAAA,EAAA,KAEGO,MAAA,OAAA,CAAA,SAAAL,EAAA,EACYF,GAAAC,IAAA,MAAAM,EAAAA,IAAAV,EAAA,CAAA,IAAA2B,EAAA1B,EAAA,iBAAA,YAAA0B,EAAA,QAAA,KAAAxB,CAAA,CAAA,EAAA,IAGZ,CAAA,CAAA,CACN,CAGN,EACAU,EAAA,YAAA"}