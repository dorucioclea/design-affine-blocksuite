{"version":3,"file":"button.stories-645179cc.js","sources":["../../src/button/button.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport {\n  type FC,\n  forwardRef,\n  type HTMLAttributes,\n  type PropsWithChildren,\n  type ReactElement,\n  useMemo,\n} from 'react';\n\nimport { Loading } from '../loading';\nimport { button, buttonIcon } from './style.css';\nexport type ButtonType =\n  | 'default'\n  | 'primary'\n  | 'plain'\n  | 'error'\n  | 'warning'\n  | 'success'\n  | 'processing';\nexport type ButtonSize = 'default' | 'large' | 'extraLarge';\nexport type ButtonProps = PropsWithChildren &\n  Omit<HTMLAttributes<HTMLButtonElement>, 'type'> & {\n    type?: ButtonType;\n    disabled?: boolean;\n    icon?: ReactElement;\n    iconPosition?: 'start' | 'end';\n    shape?: 'default' | 'round' | 'circle';\n    block?: boolean;\n    size?: ButtonSize;\n    loading?: boolean;\n    withoutHoverStyle?: boolean;\n  };\nconst defaultProps = {\n  type: 'default',\n  disabled: false,\n  shape: 'default',\n  size: 'default',\n  iconPosition: 'start',\n  loading: false,\n  withoutHoverStyle: false,\n};\n\nconst ButtonIcon: FC<ButtonProps> = props => {\n  const {\n    size,\n    icon,\n    iconPosition = 'start',\n    children,\n    type,\n    loading,\n  } = {\n    ...defaultProps,\n    ...props,\n  };\n  const onlyIcon = icon && !children;\n  return (\n    <div\n      className={clsx(buttonIcon, {\n        'color-white': type !== 'default' && type !== 'plain',\n        large: size === 'large',\n        extraLarge: size === 'extraLarge',\n        end: iconPosition === 'end' && !onlyIcon,\n        start: iconPosition === 'start' && !onlyIcon,\n        loading,\n      })}\n    >\n      {icon}\n    </div>\n  );\n};\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    const {\n      children,\n      type,\n      disabled,\n      shape,\n      size,\n      icon: propsIcon,\n      iconPosition,\n      block,\n      loading,\n      withoutHoverStyle,\n      className,\n      ...otherProps\n    } = {\n      ...defaultProps,\n      ...props,\n    };\n\n    const icon = useMemo(() => {\n      if (loading) {\n        return <Loading />;\n      }\n      return propsIcon;\n    }, [propsIcon, loading]);\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(\n          button,\n          {\n            primary: type === 'primary',\n            plain: type === 'plain',\n            error: type === 'error',\n            warning: type === 'warning',\n            success: type === 'success',\n            processing: type === 'processing',\n            large: size === 'large',\n            extraLarge: size === 'extraLarge',\n            disabled,\n            circle: shape === 'circle',\n            round: shape === 'round',\n            block,\n            loading,\n            'without-hover': withoutHoverStyle,\n          },\n          className\n        )}\n        disabled={disabled}\n        data-disabled={disabled}\n        {...otherProps}\n      >\n        {icon && iconPosition === 'start' ? (\n          <ButtonIcon {...props} icon={icon} />\n        ) : null}\n        <span>{children}</span>\n        {icon && iconPosition === 'end' ? (\n          <ButtonIcon {...props} icon={icon} />\n        ) : null}\n      </button>\n    );\n  }\n);\nButton.displayName = 'Button';\nexport default Button;\n"],"names":["defaultProps","ButtonIcon","props","size","icon","iconPosition","children","type","loading","onlyIcon","jsx","clsx","buttonIcon","Button","forwardRef","ref","disabled","shape","propsIcon","block","withoutHoverStyle","className","otherProps","useMemo","Loading","jsxs","button"],"mappings":"4RAiCA,MAAAA,EAAA,CAAqB,KAAA,UACb,SAAA,GACI,MAAA,UACH,KAAA,UACD,aAAA,QACQ,QAAA,GACL,kBAAA,EAEX,EAEAC,EAAAC,GAAA,CACE,KAAA,CAAM,KAAAC,EACJ,KAAAC,EACA,aAAAC,EAAA,QACe,SAAAC,EACf,KAAAC,EACA,QAAAC,CACA,EAAA,CACE,GAAAR,EACC,GAAAE,CACA,EAELO,EAAAL,GAAA,CAAAE,EACA,OAAAI,EAAA,IACE,MAAC,CAAA,UAAAC,EAAAC,EAAA,CAC6B,cAAAL,IAAA,WAAAA,IAAA,QACoB,MAAAJ,IAAA,QAC9B,WAAAA,IAAA,aACK,IAAAE,IAAA,OAAA,CAAAI,EACW,MAAAJ,IAAA,SAAA,CAAAI,EACI,QAAAD,CACpC,CAAA,EACD,SAAAJ,CAEA,CAAA,CAGP,EACOS,EAAAC,EAAA,WAAe,CAAAZ,EAAAa,IAAA,CAElB,KAAA,CAAM,SAAAT,EACJ,KAAAC,EACA,SAAAS,EACA,MAAAC,EACA,KAAAd,EACA,KAAAe,EACM,aAAAb,EACN,MAAAc,EACA,QAAAX,EACA,kBAAAY,EACA,UAAAC,EACA,GAAAC,CACG,EAAA,CACD,GAAAtB,EACC,GAAAE,CACA,EAGLE,EAAAmB,EAAAA,QAAA,IACEf,EACEE,EAAA,IAAAc,EAAA,CAAA,CAAA,EAEFN,EAAO,CAAAA,EAAAV,CAAA,CAAA,EAGT,OAAAiB,EAAA,KACE,SAAC,CAAA,IAAAV,EACC,UAAAJ,EACWe,EACT,CACA,QAAAnB,IAAA,UACoB,MAAAA,IAAA,QACF,MAAAA,IAAA,QACA,QAAAA,IAAA,UACE,QAAAA,IAAA,UACA,WAAAA,IAAA,aACG,MAAAJ,IAAA,QACL,WAAAA,IAAA,aACK,SAAAa,EACrB,OAAAC,IAAA,SACkB,MAAAA,IAAA,QACD,MAAAE,EACjB,QAAAX,EACA,gBAAAY,CACiB,EACnBC,CACA,EACF,SAAAL,EACA,gBAAAA,EACe,GAAAM,EACX,SAAA,CAEHlB,GAAAC,IAAA,QAAAK,MAAAT,EAAA,CAAA,GAAAC,EAAA,KAAAE,CAAA,CAAA,EAAA,KAEGM,MAAA,OAAA,CAAA,SAAAJ,EAAA,EACYF,GAAAC,IAAA,MAAAK,MAAAT,EAAA,CAAA,GAAAC,EAAA,KAAAE,CAAA,CAAA,EAAA,IAGZ,CAAA,CAAA,CACN,CAGN,EACAS,EAAA,YAAA"}