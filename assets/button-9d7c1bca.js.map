{"version":3,"file":"button-9d7c1bca.js","sources":["../../src/button/button.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport {\n  type FC,\n  forwardRef,\n  type HTMLAttributes,\n  type PropsWithChildren,\n  type ReactElement,\n  useMemo,\n} from 'react';\n\nimport { Loading } from '../loading';\nimport { button, buttonIcon } from './style.css';\n\nexport type ButtonType =\n  | 'default'\n  | 'primary'\n  | 'plain'\n  | 'error'\n  | 'warning'\n  | 'success'\n  | 'processing';\nexport type ButtonSize = 'default' | 'large' | 'extraLarge';\ntype BaseButtonProps = {\n  type?: ButtonType;\n  disabled?: boolean;\n  icon?: ReactElement;\n  iconPosition?: 'start' | 'end';\n  shape?: 'default' | 'round' | 'circle';\n  block?: boolean;\n  size?: ButtonSize;\n  loading?: boolean;\n  withoutHoverStyle?: boolean;\n};\n\nexport type ButtonProps = PropsWithChildren<BaseButtonProps> &\n  Omit<HTMLAttributes<HTMLButtonElement>, 'type'> & {\n    componentProps?: {\n      startIcon?: Omit<IconButtonProps, 'icon' | 'iconPosition'>;\n      endIcon?: Omit<IconButtonProps, 'icon' | 'iconPosition'>;\n    };\n  };\n\ntype IconButtonProps = PropsWithChildren<BaseButtonProps> &\n  Omit<HTMLAttributes<HTMLDivElement>, 'type'>;\n\nconst defaultProps = {\n  type: 'default',\n  disabled: false,\n  shape: 'default',\n  size: 'default',\n  iconPosition: 'start',\n  loading: false,\n  withoutHoverStyle: false,\n} as const;\n\nconst ButtonIcon: FC<IconButtonProps> = props => {\n  const {\n    size,\n    icon,\n    iconPosition = 'start',\n    children,\n    type,\n    loading,\n    withoutHoverStyle,\n    ...otherProps\n  } = {\n    ...defaultProps,\n    ...props,\n  };\n  const onlyIcon = icon && !children;\n  return (\n    <div\n      {...otherProps}\n      className={clsx(buttonIcon, {\n        'color-white': type !== 'default' && type !== 'plain',\n        large: size === 'large',\n        extraLarge: size === 'extraLarge',\n        end: iconPosition === 'end' && !onlyIcon,\n        start: iconPosition === 'start' && !onlyIcon,\n        loading,\n      })}\n      data-without-hover={withoutHoverStyle}\n    >\n      {icon}\n    </div>\n  );\n};\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    const {\n      children,\n      type,\n      disabled,\n      shape,\n      size,\n      icon: propsIcon,\n      iconPosition,\n      block,\n      loading,\n      withoutHoverStyle,\n      className,\n      ...otherProps\n    } = {\n      ...defaultProps,\n      ...props,\n    } satisfies ButtonProps;\n\n    const icon = useMemo(() => {\n      if (loading) {\n        return <Loading />;\n      }\n      return propsIcon;\n    }, [propsIcon, loading]);\n\n    const baseIconButtonProps = useMemo(() => {\n      return {\n        size,\n        iconPosition,\n        icon,\n        type,\n        disabled,\n        loading,\n      } as const;\n    }, [disabled, icon, iconPosition, loading, size, type]);\n\n    return (\n      <button\n        {...otherProps}\n        ref={ref}\n        className={clsx(\n          button,\n          {\n            primary: type === 'primary',\n            plain: type === 'plain',\n            error: type === 'error',\n            warning: type === 'warning',\n            success: type === 'success',\n            processing: type === 'processing',\n            large: size === 'large',\n            extraLarge: size === 'extraLarge',\n            disabled,\n            circle: shape === 'circle',\n            round: shape === 'round',\n            block,\n            loading,\n            'without-hover': withoutHoverStyle,\n          },\n          className\n        )}\n        disabled={disabled}\n        data-disabled={disabled}\n      >\n        {icon && iconPosition === 'start' ? (\n          <ButtonIcon\n            {...baseIconButtonProps}\n            {...props.componentProps?.startIcon}\n            icon={icon}\n            iconPosition=\"start\"\n          />\n        ) : null}\n        <span>{children}</span>\n        {icon && iconPosition === 'end' ? (\n          <ButtonIcon\n            {...baseIconButtonProps}\n            {...props.componentProps?.endIcon}\n            icon={icon}\n            iconPosition=\"end\"\n          />\n        ) : null}\n      </button>\n    );\n  }\n);\nButton.displayName = 'Button';\nexport default Button;\n"],"names":["defaultProps","ButtonIcon","props","size","icon","iconPosition","children","type","loading","withoutHoverStyle","otherProps","onlyIcon","jsx","clsx","buttonIcon","Button","forwardRef","ref","disabled","shape","propsIcon","block","className","useMemo","Loading","baseIconButtonProps","jsxs","button","_a","_b"],"mappings":"uLA6CA,MAAAA,EAAA,CAAqB,KAAA,UACb,SAAA,GACI,MAAA,UACH,KAAA,UACD,aAAA,QACQ,QAAA,GACL,kBAAA,EAEX,EAEAC,EAAAC,GAAA,CACE,KAAA,CAAM,KAAAC,EACJ,KAAAC,EACA,aAAAC,EAAA,QACe,SAAAC,EACf,KAAAC,EACA,QAAAC,EACA,kBAAAC,EACA,GAAAC,CACG,EAAA,CACD,GAAAV,EACC,GAAAE,CACA,EAELS,EAAAP,GAAA,CAAAE,EACA,OAAAM,EAAA,IACE,MAAC,CAAA,GAAAF,EACK,UAAAG,EAAAC,EAAA,CACwB,cAAAP,IAAA,WAAAA,IAAA,QACoB,MAAAJ,IAAA,QAC9B,WAAAA,IAAA,aACK,IAAAE,IAAA,OAAA,CAAAM,EACW,MAAAN,IAAA,SAAA,CAAAM,EACI,QAAAH,CACpC,CAAA,EACD,qBAAAC,EACmB,SAAAL,CAEnB,CAAA,CAGP,EACOW,EAAAC,EAAA,WAAe,CAAAd,EAAAe,IAAA,SAElB,KAAA,CAAM,SAAAX,EACJ,KAAAC,EACA,SAAAW,EACA,MAAAC,EACA,KAAAhB,EACA,KAAAiB,EACM,aAAAf,EACN,MAAAgB,EACA,QAAAb,EACA,kBAAAC,EACA,UAAAa,EACA,GAAAZ,CACG,EAAA,CACD,GAAAV,EACC,GAAAE,CACA,EAGLE,EAAAmB,EAAAA,QAAA,IACEf,EACEI,EAAA,IAAAY,EAAA,CAAA,CAAA,EAEFJ,EAAO,CAAAA,EAAAZ,CAAA,CAAA,EAGTiB,EAAAF,EAAAA,QAAA,KACE,CAAO,KAAApB,EACL,aAAAE,EACA,KAAAD,EACA,KAAAG,EACA,SAAAW,EACA,QAAAV,CACA,GACF,CAAAU,EAAAd,EAAAC,EAAAG,EAAAL,EAAAI,CAAA,CAAA,EAGF,OAAAmB,EAAA,KACE,SAAC,CAAA,GAAAhB,EACK,IAAAO,EACJ,UAAAJ,EACWc,EACT,CACA,QAAApB,IAAA,UACoB,MAAAA,IAAA,QACF,MAAAA,IAAA,QACA,QAAAA,IAAA,UACE,QAAAA,IAAA,UACA,WAAAA,IAAA,aACG,MAAAJ,IAAA,QACL,WAAAA,IAAA,aACK,SAAAe,EACrB,OAAAC,IAAA,SACkB,MAAAA,IAAA,QACD,MAAAE,EACjB,QAAAb,EACA,gBAAAC,CACiB,EACnBa,CACA,EACF,SAAAJ,EACA,gBAAAA,EACe,SAAA,CAEdd,GAAAC,IAAA,QAAAO,EAAA,IACCX,EAAC,CAAA,GAAAwB,EACK,IAAAG,EAAA1B,EAAA,iBAAA,YAAA0B,EAAA,UACsB,KAAAxB,EAC1B,aAAA,OACa,CAAA,EAAA,KAEbQ,MAAA,OAAA,CAAA,SAAAN,EAAA,EACYF,GAAAC,IAAA,MAAAO,EAAA,IAEdX,EAAC,CAAA,GAAAwB,EACK,IAAAI,EAAA3B,EAAA,iBAAA,YAAA2B,EAAA,QACsB,KAAAzB,EAC1B,aAAA,KACa,CAAA,EAAA,IAEb,CAAA,CAAA,CACN,CAGN,EACAW,EAAA,YAAA"}